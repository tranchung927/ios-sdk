// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 5.4.2 (swiftlang-1205.0.28.2 clang-1205.0.19.57)
// swift-module-flags: -target arm64-apple-ios11.0-simulator -enable-objc-interop -enable-library-evolution -swift-version 5 -enforce-exclusivity=checked -O -module-name TransitionController
import Foundation
import Swift
@_exported import TransitionController
import UIKit
@objc @_inheritsConvenienceInitializers open class PresentationManager : ObjectiveC.NSObject, UIKit.UIViewControllerTransitioningDelegate {
  @objc public func presentationController(forPresented presented: UIKit.UIViewController, presenting: UIKit.UIViewController?, source: UIKit.UIViewController) -> UIKit.UIPresentationController?
  @objc public func animationController(forPresented presented: UIKit.UIViewController, presenting: UIKit.UIViewController, source: UIKit.UIViewController) -> UIKit.UIViewControllerAnimatedTransitioning?
  @objc public func animationController(forDismissed dismissed: UIKit.UIViewController) -> UIKit.UIViewControllerAnimatedTransitioning?
  @objc override dynamic public init()
  @objc deinit
}
@objc @_inheritsConvenienceInitializers @_hasMissingDesignatedInitializers final public class OverlayView : UIKit.UIView {
  @objc dynamic final public var color: UIKit.UIColor? {
    @objc get
    @objc set
  }
  @objc required dynamic public init?(coder aDecoder: Foundation.NSCoder)
  @objc deinit
}
@objc @_inheritsConvenienceInitializers public class FadePushAnimator : ObjectiveC.NSObject, UIKit.UIViewControllerAnimatedTransitioning {
  @objc public func transitionDuration(using transitionContext: UIKit.UIViewControllerContextTransitioning?) -> Foundation.TimeInterval
  @objc public func animateTransition(using transitionContext: UIKit.UIViewControllerContextTransitioning)
  @objc override dynamic public init()
  @objc deinit
}
@objc @_inheritsConvenienceInitializers public class FadePopAnimator : ObjectiveC.NSObject, UIKit.UIViewControllerAnimatedTransitioning {
  @objc public func transitionDuration(using transitionContext: UIKit.UIViewControllerContextTransitioning?) -> Foundation.TimeInterval
  @objc public func animateTransition(using transitionContext: UIKit.UIViewControllerContextTransitioning)
  @objc override dynamic public init()
  @objc deinit
}
