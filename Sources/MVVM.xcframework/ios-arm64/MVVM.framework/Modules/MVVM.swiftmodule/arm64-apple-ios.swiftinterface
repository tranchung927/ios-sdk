// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 5.6 (swiftlang-5.6.0.323.62 clang-1316.0.20.8)
// swift-module-flags: -target arm64-apple-ios11.0 -enable-objc-interop -enable-library-evolution -swift-version 5 -enforce-exclusivity=checked -O -module-name MVVM
import Foundation
@_exported import MVVM
import Swift
import UIKit
import _Concurrency
@_inheritsConvenienceInitializers @_Concurrency.MainActor(unsafe) open class MVVMViewController<VM> : UIKit.UIViewController, MVVM.PView where VM : MVVM.PViewModel {
  @_Concurrency.MainActor(unsafe) public var viewModel: VM {
    get
  }
  @objc deinit
  @_Concurrency.MainActor(unsafe) @objc override dynamic open func viewDidLoad()
  @_Concurrency.MainActor(unsafe) @objc override dynamic open func viewWillAppear(_ animated: Swift.Bool)
  @_Concurrency.MainActor(unsafe) @objc override dynamic open func viewDidAppear(_ animated: Swift.Bool)
  @_Concurrency.MainActor(unsafe) @objc override dynamic open func viewWillDisappear(_ animated: Swift.Bool)
  @_Concurrency.MainActor(unsafe) @objc override dynamic open func viewDidDisappear(_ animated: Swift.Bool)
  @_Concurrency.MainActor(unsafe) open func viewDidReady()
  @_Concurrency.MainActor(unsafe) open func viewDidRelease()
  @_Concurrency.MainActor(unsafe) open func viewOnBind()
  @_Concurrency.MainActor(unsafe) open func viewOnSetup()
  @_Concurrency.MainActor(unsafe) public func invoke(viewModel: VM)
  @_Concurrency.MainActor(unsafe) @objc override dynamic public init(nibName nibNameOrNil: Swift.String?, bundle nibBundleOrNil: Foundation.Bundle?)
  @_Concurrency.MainActor(unsafe) @objc required dynamic public init?(coder: Foundation.NSCoder)
  public typealias ViewModel = VM
}
public protocol PViewModel {
  func viewModelDidReady()
  func viewModelWillActive()
  func viewModelDidActive()
  func viewModelWillInactive()
  func viewModelDidInactive()
  func viewModelDidRelease()
}
public protocol PTabbarAnimation : UIKit.UIViewControllerAnimatedTransitioning {
  var isReversed: Swift.Bool { get set }
  var duration: Foundation.TimeInterval { get set }
}
@objc @_inheritsConvenienceInitializers open class MVVMViewModel : ObjectiveC.NSObject, MVVM.PViewModel {
  @objc override dynamic public init()
  @objc deinit
  open func viewModelDidReady()
  open func viewModelWillActive()
  open func viewModelDidActive()
  open func viewModelWillInactive()
  open func viewModelDidInactive()
  open func viewModelDidRelease()
}
public protocol PView {
  associatedtype ViewModel
  var viewModel: Self.ViewModel { get }
  func viewDidReady()
  func viewDidRelease()
  func viewOnBind()
  func viewOnSetup()
  func invoke(viewModel: Self.ViewModel)
}
@_inheritsConvenienceInitializers @_Concurrency.MainActor(unsafe) open class MVVMTabBarController<VM> : UIKit.UITabBarController, MVVM.PView, UIKit.UITabBarControllerDelegate where VM : MVVM.PViewModel {
  @_Concurrency.MainActor(unsafe) @objc override dynamic open var canBecomeFirstResponder: Swift.Bool {
    @_Concurrency.MainActor(unsafe) @objc get
  }
  @_Concurrency.MainActor(unsafe) public var viewModel: VM {
    get
  }
  @_Concurrency.MainActor(unsafe) public var animation: MVVM.PTabbarAnimation {
    get
  }
  @objc deinit
  @_Concurrency.MainActor(unsafe) @objc override dynamic open func viewDidLoad()
  @_Concurrency.MainActor(unsafe) @objc override dynamic open func viewWillAppear(_ animated: Swift.Bool)
  @_Concurrency.MainActor(unsafe) @objc override dynamic open func viewDidAppear(_ animated: Swift.Bool)
  @_Concurrency.MainActor(unsafe) @objc override dynamic open func viewWillDisappear(_ animated: Swift.Bool)
  @_Concurrency.MainActor(unsafe) @objc override dynamic open func viewDidDisappear(_ animated: Swift.Bool)
  @_Concurrency.MainActor(unsafe) @objc override dynamic open var supportedInterfaceOrientations: UIKit.UIInterfaceOrientationMask {
    @_Concurrency.MainActor(unsafe) @objc get
  }
  @_Concurrency.MainActor(unsafe) @objc override dynamic open var shouldAutorotate: Swift.Bool {
    @_Concurrency.MainActor(unsafe) @objc get
  }
  @_Concurrency.MainActor(unsafe) open func viewDidReady()
  @_Concurrency.MainActor(unsafe) open func viewDidRelease()
  @_Concurrency.MainActor(unsafe) open func viewOnBind()
  @_Concurrency.MainActor(unsafe) open func viewOnSetup()
  @_Concurrency.MainActor(unsafe) public func invoke(viewModel: VM)
  @_Concurrency.MainActor(unsafe) public func invokeAnimation(_ animation: MVVM.PTabbarAnimation)
  @_Concurrency.MainActor(unsafe) @objc public func tabBarController(_ tabBarController: UIKit.UITabBarController, animationControllerForTransitionFrom fromVC: UIKit.UIViewController, to toVC: UIKit.UIViewController) -> UIKit.UIViewControllerAnimatedTransitioning?
  @_Concurrency.MainActor(unsafe) @objc override dynamic public init(nibName nibNameOrNil: Swift.String?, bundle nibBundleOrNil: Foundation.Bundle?)
  @_Concurrency.MainActor(unsafe) @objc required dynamic public init?(coder: Foundation.NSCoder)
  public typealias ViewModel = VM
}
